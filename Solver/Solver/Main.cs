using IcfpUtils;
using System.IO;
using System;
using System.Collections.Generic;
using System.Text;

namespace Solver
{
    class MainProgram
    {
        static void Main(string[] args)
        {
            var symbols = new Dictionary<string, LispNode>();

            var lines = File.ReadLines(@"C:\Users\cashto\Documents\GitHub\icfp2020\work\galaxy.txt");
            foreach (var line in lines)
            {
                var x = line.Split('=');
                var symbol = x[0].Trim();
                var value = Program.Parse(x[1]);

                symbols[symbol] = value;
            }

            //var errorLine = "((cons 0) ((cons ((cons 0) ((cons ((cons 0) nil)) ((cons 0) ((cons nil) nil))))) ((cons ((cons ((cons ((cons -1) -3)) ((cons ((cons 0) -3)) ((cons ((cons 1) -3)) ((cons ((cons 2) -2)) ((cons ((cons -2) -1)) ((cons ((cons -1) -1)) ((cons ((cons 0) -1)) ((cons ((cons 3) -1)) ((cons ((cons -3) 0)) ((cons ((cons -1) 0)) ((cons ((cons 1) 0)) ((cons ((cons 3) 0)) ((cons ((cons -3) 1)) ((cons ((cons 0) 1)) ((cons ((cons 1) 1)) ((cons ((cons 2) 1)) ((cons ((cons -2) 2)) ((cons ((cons -1) 3)) ((cons ((cons 0) 3)) ((cons ((cons 1) 3)) ((cons (((cons -3) -3) ((c ((b b) ((b :1162) (add ((c ((b b) ((b :1115) cdr))) ((c :1126) cdr)))))) (add 63)))) ((:1126 (((:1127 ((c ((b b) ((b :1115) ((s ((b :1162) ((c ((s ((b b) ((c ((b b) add)) neg))) ((b (s mul)) div))) 7))) ((c div) 7))))) ((c :1126) ((s ((b :1162) ((c ((s ((b b) ((c ((b b) add)) neg))) ((b (s mul)) div))) 7))) ((c div) 7))))) cons) 64)) ((c :1172) ((:1162 -3) -3))))))))))))))))))))))))) ((cons ((:1183 ((:1183 (:1214 ((((:1204 ((:1162 0) 0)) ((((:1166 -3) -3) 7) 7)) 0) -1))) ((:1162 -5) 0))) ((:1162 -3) -3))) ((cons ((:1183 (:1230 ((((:1204 ((:1162 0) 0)) ((((:1166 -3) -3) 7) 7)) 0) -1))) ((:1162 -3) -3))) nil)))) nil)))";
            //var errorLine ="((cons 0) ((cons ((cons 0) ((cons ((cons 0) nil)) ((cons 0) ((cons nil) nil))))) ((cons ((cons ((cons ((cons -1) -3)) ((cons ((cons 0) -3)) ((cons ((cons 1) -3)) ((cons ((cons 2) -2)) ((cons ((cons -2) -1)) ((cons ((cons -1) -1)) ((cons ((cons 0) -1)) ((cons ((cons 3) -1)) ((cons ((cons -3) 0)) ((cons ((cons -1) 0)) ((cons ((cons 1) 0)) ((cons ((cons 3) 0)) ((cons ((cons -3) 1)) ((cons ((cons 0) 1)) ((cons ((cons 1) 1)) ((cons ((cons 2) 1)) ((cons ((cons -2) 2)) ((cons ((cons -1) 3)) ((cons ((cons 0) 3)) ((cons ((cons 1) 3)) ((cons ((:1162 ((add ((c ((b b) ((b :1115) cdr))) ((c :1126) cdr))) -3)) 60)) ((:1126 (((:1127 ((c ((b b) ((b :1115) ((s ((b :1162) ((c ((s ((b b) ((c ((b b) add)) neg))) ((b (s mul)) div))) 7))) ((c div) 7))))) ((c :1126) ((s ((b :1162) ((c ((s ((b b) ((c ((b b) add)) neg))) ((b (s mul)) div))) 7))) ((c div) 7))))) cons) 64)) ((c :1172) ((:1162 -3) -3))))))))))))))))))))))))) ((cons ((:1183 ((:1183 (:1214 ((((:1204 ((:1162 0) 0)) ((((:1166 -3) -3) 7) 7)) 0) -1))) ((:1162 -5) 0))) ((:1162 -3) -3))) ((cons ((:1183 (:1230 ((((:1204 ((:1162 0) 0)) ((((:1166 -3) -3) 7) 7)) 0) -1))) ((:1162 -3) -3))) nil)))) nil)))";
            //var errorLine = "((add ((c ((b b) ((b :1115) cdr))) ((c :1126) cdr))) -3)";
            //var errorLine = "((cons 0) ((cons ((cons 0) ((cons ((cons 0) nil)) ((cons 0) ((cons nil) nil))))) ((cons ((cons ((cons ((cons -1) -3)) ((cons ((cons 0) -3)) ((cons ((cons 1) -3)) ((cons ((cons 2) -2)) ((cons ((cons -2) -1)) ((cons ((cons -1) -1)) ((cons ((cons 0) -1)) ((cons ((cons 3) -1)) ((cons ((cons -3) 0)) ((cons ((cons -1) 0)) ((cons ((cons 1) 0)) ((cons ((cons 3) 0)) ((cons ((cons -3) 1)) ((cons ((cons 0) 1)) ((cons ((cons 1) 1)) ((cons ((cons 2) 1)) ((cons ((cons -2) 2)) ((cons ((cons -1) 3)) ((cons ((cons 0) 3)) ((cons ((cons 1) 3)) ((cons (((:1162 -3) -3) ((c ((b b) ((b :1162) (add ((c ((b b) ((b :1115) cdr))) ((c :1126) cdr)))))) (add 63)))) ((:1126 (((:1127 ((c ((b b) ((b :1115) ((s ((b :1162) ((c ((s ((b b) ((c ((b b) add)) neg))) ((b (s mul)) div))) 7))) ((c div) 7))))) ((c :1126) ((s ((b :1162) ((c ((s ((b b) ((c ((b b) add)) neg))) ((b (s mul)) div))) 7))) ((c div) 7))))) cons) 64)) ((c :1172) ((:1162 -3) -3))))))))))))))))))))))))) ((cons ((:1183 ((:1183 (:1214 ((((:1204 ((:1162 0) 0)) ((((:1166 -3) -3) 7) 7)) 0) -1))) ((:1162 -5) 0))) ((:1162 -3) -3))) ((cons ((:1183 (:1230 ((((:1204 ((:1162 0) 0)) ((((:1166 -3) -3) 7) 7)) 0) -1))) ((:1162 -3) -3))) nil)))) nil)))";
            //var errorLine = "((cons 0) ((cons ((cons 0) ((cons ((cons 0) nil)) ((cons 0) ((cons nil) nil))))) ((cons ((cons ((cons ((cons -1) -3)) ((cons ((cons 0) -3)) ((cons ((cons 1) -3)) ((cons ((cons 2) -2)) ((cons ((cons -2) -1)) ((cons ((cons -1) -1)) ((cons ((cons 0) -1)) ((cons ((cons 3) -1)) ((cons ((cons -3) 0)) ((cons ((cons -1) 0)) ((cons ((cons 1) 0)) ((cons ((cons 3) 0)) ((cons ((cons -3) 1)) ((cons ((cons 0) 1)) ((cons ((cons 1) 1)) ((cons ((cons 2) 1)) ((cons ((cons -2) 2)) ((cons ((cons -1) 3)) ((cons ((cons 0) 3)) ((cons ((cons 1) 3)) ((c ((b b) ((b cons) ((s ((b cons) ((c ((s ((b b) ((c ((b b) add)) neg))) ((b (s mul)) div))) 7))) ((c div) 7))))) ((c ((s ((b b) ((c isnil) nil))) ((c b) ((s ((b c) ((b (b b)) (b cons)))) (c ((s ((b b) ((c isnil) nil))) ((c b) ((s ((b c) ((b (b b)) (b cons)))) (c ((s ((b b) ((c isnil) nil))) ((c b) ((s ((b c) ((b (b b)) (b cons)))) (c ((s ((b b) ((c isnil) nil))) ((c b) ((s ((b c) ((b (b b)) (b cons)))) (c ((s ((b b) ((c isnil) nil))) ((c b) ((s ((b c) ((b (b b)) (b cons)))) (c ((s ((b b) ((c isnil) nil))) ((c b) ((s ((b c) ((b (b b)) (b cons)))) (c ((s ((b b) ((c isnil) nil))) ((c b) ((s ((b c) ((b (b b)) (b cons)))) (c ((s ((b b) ((c isnil) nil))) ((c b) ((s ((b c) ((b (b b)) (b cons)))) (c ((s ((b b) ((c isnil) nil))) ((c b) ((s ((b c) ((b (b b)) (b cons)))) (c ((s ((b b) ((c isnil) nil))) ((c b) ((s ((b c) ((b (b b)) (b cons)))) (c ((s ((b b) ((c isnil) nil))) ((c b) ((s ((b c) ((b (b b)) (b cons)))) (c ((s ((b b) ((c isnil) nil))) ((c b) ((s ((b c) ((b (b b)) (b cons)))) (c ((s ((b b) ((c isnil) nil))) ((c b) ((s ((b c) ((b (b b)) (b cons)))) (c ((s ((b b) ((c isnil) nil))) ((c b) ((s ((b c) ((b (b b)) (b cons)))) (c ((s ((b b) ((c isnil) nil))) ((c b) ((s ((b c) ((b (b b)) (b cons)))) (c ((s ((b b) ((c isnil) nil))) ((c b) ((s ((b c) ((b (b b)) (b cons)))) (c ((s ((b b) ((c isnil) nil))) ((c b) ((s ((b c) ((b (b b)) (b cons)))) (c ((s ((b b) ((c isnil) nil))) ((c b) ((s ((b c) ((b (b b)) (b cons)))) (c ((s ((b b) ((c isnil) nil))) ((c b) ((s ((b c) ((b (b b)) (b cons)))) (c ((s ((b b) ((c isnil) nil))) ((c b) ((s ((b c) ((b (b b)) (b cons)))) (c ((s ((b b) ((c isnil) nil))) ((c b) ((s ((b c) ((b (b b)) (b cons)))) (c ((s ((b b) ((c isnil) nil))) ((c b) ((s ((b c) ((b (b b)) (b cons)))) (c ((s ((b b) ((c isnil) nil))) ((c b) ((s ((b c) ((b (b b)) (b cons)))) (c ((s ((b b) ((c isnil) nil))) ((c b) ((s ((b c) ((b (b b)) (b cons)))) (c ((s ((b b) ((c isnil) nil))) ((c b) ((s ((b c) ((b (b b)) (b cons)))) (c ((s ((b b) ((c isnil) nil))) ((c b) ((s ((b c) ((b (b b)) (b cons)))) (c ((s ((b b) ((c isnil) nil))) ((c b) ((s ((b c) ((b (b b)) (b cons)))) (c ((s ((b b) ((c isnil) nil))) ((c b) ((s ((b c) ((b (b b)) (b cons)))) (c ((s ((b b) ((c isnil) nil))) ((c b) ((s ((b c) ((b (b b)) (b cons)))) (c ((s ((b b) ((c isnil) nil))) ((c b) ((s ((b c) ((b (b b)) (b cons)))) (c ((s ((b b) ((c isnil) nil))) ((c b) ((s ((b c) ((b (b b)) (b cons)))) (c ((s ((b b) ((c isnil) nil))) ((c b) ((s ((b c) ((b (b b)) (b cons)))) (c ((s ((b b) ((c isnil) nil))) ((c b) ((s ((b c) ((b (b b)) (b cons)))) (c ((s ((b b) ((c isnil) nil))) ((c b) ((s ((b c) ((b (b b)) (b cons)))) (c ((s ((b b) ((c isnil) nil))) ((c b) ((s ((b c) ((b (b b)) (b cons)))) (c ((s ((b b) ((c isnil) nil))) ((c b) ((s ((b c) ((b (b b)) (b cons)))) (c ((s ((b b) ((c isnil) nil))) ((c b) ((s ((b c) ((b (b b)) (b cons)))) (c ((s ((b b) ((c isnil) nil))) ((c b) ((s ((b c) ((b (b b)) (b cons)))) (c ((s ((b b) ((c isnil) nil))) ((c b) ((s ((b c) ((b (b b)) (b cons)))) (c ((s ((b b) ((c isnil) nil))) ((c b) ((s ((b c) ((b (b b)) (b cons)))) (c ((s ((b b) ((c isnil) nil))) ((c b) ((s ((b c) ((b (b b)) (b cons)))) (c ((s ((b b) ((c isnil) nil))) ((c b) ((s ((b c) ((b (b b)) (b cons)))) (c ((s ((b b) ((c isnil) nil))) ((c b) ((s ((b c) ((b (b b)) (b cons)))) (c ((s ((b b) ((c isnil) nil))) ((c b) ((s ((b c) ((b (b b)) (b :1115)))) (c :1126))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) ((s ((b cons) ((c ((s ((b b) ((c ((b b) add)) neg))) ((b (s mul)) div))) 7))) ((c div) 7))))))))))))))))))))))))) ((cons ((cons ((cons -7) -3)) ((cons ((cons -8) -2)) nil))) ((cons nil) nil)))) nil)))";
            //Evaluate(Lisp.Parse(GetStream(errorLine)).Children.First(), symbols, substitutions: true, debug: true);

            var state = Program.Parse("nil");
            var protocolResult = Program.Interact(symbols["galaxy"], state, "0", "0", symbols);

            Console.WriteLine("DONE!");
            Console.WriteLine(protocolResult);
        }
    }
}
